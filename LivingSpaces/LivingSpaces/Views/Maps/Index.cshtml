@{
    Layout = "";
    var googleMapsApiKey = ViewData["GoogleMapsApiKey"];
}



<html>
<head>
    <title>Add Map</title>

    <link rel="stylesheet" type="text/css" href="./style.css" />
    <script type="module" src="./index.js"></script>
    <style>
        /* Set the size of the div element that contains the map */
        #map {
            height: 400px; /* The height is 400 pixels */
            width: 100%; /* The width is the width of the web page */
        }
    </style>
</head>
<body>
    <h3>My Google Maps Demo</h3>
    <!--The div element for the map -->
    <div id="map"></div>

    <form id="locationForm" method="post" asp-action="SetLocation">
        <input type="text" id="latitude" name="latitude" />
        <input type="text" id="longitude" name="longitude" />
        <button type="submit">Submit Location</button>
    </form>

    <script>
            (g => { var h, a, k, p = "The Google Maps JavaScript API", c = "google", l = "importLibrary", q = "__ib__", m = document, b = window; b = b[c] || (b[c] = {}); var d = b.maps || (b.maps = {}), r = new Set, e = new URLSearchParams, u = () => h || (h = new Promise(async (f, n) => { await (a = m.createElement("script")); e.set("libraries", [...r] + ""); for (k in g) e.set(k.replace(/[A-Z]/g, t => "_" + t[0].toLowerCase()), g[k]); e.set("callback", c + ".maps." + q); a.src = `https://maps.${c}apis.com/maps/api/js?` + e; d[q] = f; a.onerror = () => h = n(Error(p + " could not load.")); a.nonce = m.querySelector("script[nonce]")?.nonce || ""; m.head.append(a) })); d[l] ? console.warn(p + " only loads once. Ignoring:", g) : d[l] = (f, ...n) => r.add(f) && u().then(() => d[l](f, ...n)) })({
                key: "@googleMapsApiKey",
                v: "weekly",
            });
        let map, marker;

        async function initMap() {
            const initialPosition = { lat: 31.95, lng: 35.91 };

            const { Map } = await google.maps.importLibrary("maps");
            const { AdvancedMarkerElement } = await google.maps.importLibrary("marker");

            map = new Map(document.getElementById("map"), {
                zoom: 13,
                center: initialPosition,
                mapId: "DEMO_MAP_ID",
            });

            map.addListener("click", (e) => {
                placeMarker(e.latLng);
            });
        }

        function placeMarker(position) {
            if (!marker) {
                marker = new google.maps.Marker({
                    position: position,
                    map: map,
                    draggable: true,
                });
            } else {
                marker.setPosition(position);
            }

            // Update hidden input fields with the new coordinates
            document.getElementById("latitude").value = position.lat();
            document.getElementById("longitude").value = position.lng();

            console.log("Marker placed at:", position.lat(), position.lng());
        }

        initMap();
    </script>
</body>
</html>

  